<?php

/**
 * example:
 * whrun --user=apache -- php convertSummariesToTemplate.php --limit 100
 */

require_once __DIR__ . '/../../Maintenance.php';

class ConvertSummariesToTemplate extends Maintenance {

	const LOG = '/var/log/wikihow/summary_templates_conversion.log';
	const FAIL_LOG = '/var/log/wikihow/summary_template_conversion_fails.log';
	const LAST_SENTENCE_LOG = '/var/log/wikihow/summary_last_sentence_fails.log';

	var $log_message = 'Converting summary section to the new Summary template.';
	var $already_converted = false;

	public function __construct() {
		parent::__construct();
		$this->mDescription = "Convert summaries in articles to use our Summary namespace template";
		$this->addOption( 'pageid', 'Page id to convert', false, true, 'p' );
		$this->addOption( 'limit', 'Limit of articles to convert', false, true, 'l' );
	}

	public function execute() {
		global $wgUser;
		$wgUser = User::newFromName('MiscBot');

		$where = [
			'ti_language_code' => 'en',
			'ti_summarized' => 1,
		];

		if ($this->hasOption('pageid')) {
			$where['ti_page_id'] = $this->getOption('pageid');
		}

		$options = [ 'ORDER BY' => 'ti_page_id' ];

		if ($this->hasOption('limit')) {
			$options['LIMIT'] = $this->getOption('limit');
		}

		$rows = DatabaseHelper::batchSelect(
			'titus_copy',
			[
				'ti_page_id',
				'ti_page_title'
			],
			$where,
			__METHOD__,
			$options
		);

		$count = 0;

		foreach ($rows as $row) {
			$result = $this->convertSummary($row->ti_page_id);
			$result_text = $row->ti_page_id.'	'.$row->ti_page_title;

			if ($result) {
				$success = 'yes';
				$this->logSuccess($result_text);
				$count++;
			}
			else {
				$success = 'no';
				if (!$this->already_converted) $this->logFail($result_text);
			}

			print $result_text.'	'.$success."\n";

			if ($count % 1000 == 0) usleep(500000);
		}

		print "Done. $count articles updated.\n";
	}

	private function convertSummary($page_id): bool {
		$title = Title::newFromId($page_id);
		if (!$title || !$title->exists()) return false;

		$rev = Revision::newFromTitle($title);
		if (!$rev) return false;

		$wikitext = ContentHandler::getContentText( $rev->getContent() );

		if ($this->summaryTemplateExistsInArticle($title, $wikitext)) {
			$this->already_converted = true;
			return false;
		}
		else {
			$this->already_converted = false;
		}

		$old_summary_data = SummaryEditTool::oldSummaryData($wikitext);
		return $this->makeNewSummary($title, $old_summary_data);
	}

	private function summaryTemplateExistsInArticle($title, $wikitext): bool {
		$namespace = MWNamespace::getCanonicalName(NS_SUMMARY);
		$title_regex = '('.preg_quote($title->getText()).'|'.preg_quote($title->getDBKey()).')';
		return preg_match('/{{'.$namespace.':'.$title_regex.'}}/i', $wikitext);
	}

	private function makeNewSummary($title, $old_summary_data): bool {
		if (empty($old_summary_data) || empty($old_summary_data['content'])) return false;

		$success = false;
		$page_title = $title->getText();
		$page_id = $title->getArticleId();

		$summary_content = $old_summary_data['content'];
		$summary_position = $old_summary_data['at_top'] ? 'top' : 'bottom';
		if ($this->hasLastSentence($page_id)) {
			$last_sentence = $this->parseLastSentence($summary_content);
			if ($last_sentence == '') $this->logLastSentenceFail($title);
		}
		else {
			$last_sentence = '';
		}

		$summary = Title::newFromText($page_title, NS_SUMMARY);
		if ($summary) {
			$quicksummary_template = 	'{{'.SummarySection::QUICKSUMMARY_TEMPLATE_PREFIX.
																$summary_position.'|'.
																$last_sentence.'|'.
																$summary_content.'}}';

			$content = ContentHandler::makeContent($quicksummary_template, $summary);
			$comment = wfMessage('summary_edit_log')->text();

			$page = WikiPage::factory($summary);
			$status = $page->doEditContent($content, $comment);

			if ($status->isOK()) {
				$success = $this->addSummaryTemplateToWikiTextIfNeeded($page_title, $old_summary_data);
			}
		}

		return $success;
	}

	private function addSummaryTemplateToWikiTextIfNeeded($page_title, $old_summary_data): bool {
		$result = false;

		$title = Title::newFromText($page_title);
		if (!$title || !$title->exists()) return false;

		$rev = Revision::newFromTitle($title);
		if (!$rev) return false;

		$wikitext = ContentHandler::getContentText( $rev->getContent() );

		$namespace = MWNamespace::getCanonicalName(NS_SUMMARY);
		$title_regex = '('.preg_quote($title->getText()).'|'.preg_quote($title->getDBKey()).')';

		$summary_template_exists = preg_match('/{{'.$namespace.':'.$title_regex.'}}/i', $wikitext);
		if ($summary_template_exists) return true;

		$template = '{{'.$namespace.':'.$title->getDBKey().'}}';

		$new_summary_section = $this->prepareReplacementSummarySection($old_summary_data, $template, $wikitext);

		$inline_comment = wfMessage('summary_section_notice')->text();
		$default_header = '== '.wfMessage('summary_section_default_header')->text().' ==';

		$wikitext .= 	"\n\n".
									$inline_comment."\n".
									$default_header."\n".
									$new_summary_section;

		$content = ContentHandler::makeContent($wikitext, $title);
		$comment = $this->log_message;
		$edit_flags = EDIT_UPDATE | EDIT_MINOR | EDIT_FORCE_BOT;

		$page = WikiPage::factory($title);
		$status = $page->doEditContent($content, $comment, $edit_flags);

		if ($status->isOK()) {

			//purge the page to immediately show the new summary
			$page->doPurge();

			//purge the title to force the api to grab the new summary (lag of 2-3m)
			$title->purgeSquid();

			$result = true;
		}

		return $result;
	}

	private function prepareReplacementSummarySection($old_summary_data, $template, &$wikitext) {
		global $wgParser;
		$section = Wikitext::getSection($wikitext, $old_summary_data['header'], true);
		$wikitext = $wgParser->replaceSection($wikitext, $section[1], '');

		//did we remove [[Category:*]] lines from the intro?
		if (!empty($old_summary_data['category_lines']) && !strpos('[[Category:', $wikitext)) {
			//well, put them back!
			$intro = Wikitext::getIntro($wikitext);
			$intro .= "\n".$old_summary_data['category_lines'];
			$wikitext = Wikitext::replaceIntro($wikitext, $intro);
		}

		if ($old_summary_data['content'] == '') {
			$summary_section = $old_summary_data['old_section']."\n".$template;
		}
		else {
			$summary_section = str_replace($old_summary_data['content'], $template, $old_summary_data['old_section']);
		}

		//script-only -- remove old header
		$summary_section = preg_replace('/\s*==\s*'.preg_quote($old_summary_data['header']).'\s*==\s*/', '', $summary_section);

		return $summary_section;
	}

	private function parseLastSentence(&$summary_content) {
		preg_match('/(.*[?.!]+\s+)(.*)/m', trim($summary_content), $m);
		if (empty($m) || empty($m[1] || empty($m[2]))) return '';

		$summary_content = trim($m[1]);
		$last_sentence = trim($m[2]);
		return $last_sentence;
	}

	private function logSuccess($txt) {
		$this->logIt(self::LOG, $txt);
	}

	private function logFail($txt) {
		$this->logIt(self::FAIL_LOG, $txt);
	}

	private function logLastSentenceFail($title) {
		$logfile = self::LAST_SENTENCE_LOG;
		$txt = $title->getArticleId().'	'.$title->getDBKey();
		$this->logIt($logfile, $txt);
	}

	private function logIt($logfile, $txt) {
		$fh = fopen($logfile, 'a');
		fwrite( $fh, $txt."\n" );
		fclose($fh);
	}

	private function hasLastSentence($page_id) {
		$summaries_with_last_sentences = [
			275239,1467874,1151582,9486241,9833388,1332921,8947017,3530104,8520255,9125027,9693930,1375483,9648145,298292,56474,1664239,8887799,410362,9506362,9479963,821412,97304,9787411,710607,63089,1097812,1558391,422117,1343654,192770,9519548,1570242,52760,59586,133065,400045,1328558,40135,666353,1092155,17752,1410968,9504169,2773235,139811,376804,8770822,9604772,73493,1354210,5215841,34356,933727,652771,1106638,5976098,94921,183251,1682495,9476636,1378991,145909,9636876,2697975,1256557,1380250,1782756,103308,34422,9486256,78598,271409,1343614,135618,64473,2723298,9654152,2762378,8894389,138357,9676051,9557701,9477501,1069195,407238,754476,1386706,2458513,141009,671914,39777,47752,86552,1009391,2305417,1116718,9585779,9781246,9822640,57423,95433,1333784,9648155,8891534,4654068,36164,954916,9485987,1313829,17628,1384599,8888499,420548,1584715,725891,3031843,3262963,3587818,111275,241486,694339,1230351,4149799,9633924,8888986,1406247,9482883,9607271,118614,261825,2064206,9841223,1941432,5441728,1982690,9698618,147358,410683,9520075,9800505,1557017,9477211,21961,1228640,2049963,55743,1290979,9503690,4685830,1324513,24352,9741932,51615,40152,1037364,2486235,343511,740323,2489278,1495620,1290336,1297301,9813086,9861925,18187,9713499,2573826,9630643,20722,1310703,2670018,9607310,1082234,19958,698219,1134165,9633956,1240856,29146,48351,310509,685473,1374897,197249,1325616,1110119,326270,679038,1382930,9798866,15779,395864,9657373,217969,3678864,1335084,9599194,1038505,1177122,9739494,1408343,9698511,2486204,657572,716415,1597965,9650367,9666738,824569,1169318,1423996,9894663,7128576,9699575,1879004,1963737,653653,9634327,85919,9805009,982499,74667,2571103,1659296,9495888,9509565,9542831,1872858,9666757,8328804,9637011,1376518,1519417,5372246,1340736,1751630,3034151,9637339,846969,110768,9606998,9518014,6283832,60391,45055,1327632,1423818,822991,9639778,1361053,39370,55316,9583358,51459,9657257,57861,9739488,9699310,1515798,60407,53961,1537091,2198176,1300932,141237,9891796,55888,59438,9627992,10001563,9627439,15303,53203,1127175,1853771,9679916,1336236,9693850,1664085,30566,1404980,58396,804035,9708137,9699145,50923,9585720,1646001,1937329,73875,144746,9862522,38781,9640049,4732450,20096,50847,38618,813757,9669212,39958,9585358,40690,8890875,1530587,145911,1310375,9607296,9536391,2562779,9536331,1220824,9627692,2569056,8789125,30702,9741968,9605368,1128273,424538,2239234,28235,1098885,20081,218583,2303805,161617,387939,52414,2787781,3154362,247586,686925,9508900,9800763,1536635,9856332,2547946,364419,9696690,403852,9888346,1280133,123539,9688616,9688848,145968,1086871,9691267,1320566,9812926,670569,65169,9668568,52606,9483036,9639931,1402604,145200,9581916,316445,24883,47412,763003,1371767,9758839,3616969,9637263,9666531,58542,1336655,1624233,9387541,695563,954330,3404746,9710712,656657,9656892,1032623,1562335,858291,1487178,83117,176879,9751653,117991,205495,345035,49787,2367505,3743926,122895,9590609,58653,963748,1682460,1389814,1933612,9796005,9874438,134938,1226181,9482852,9587992,9689103,86030,116857,339172,3828026,9875129,141918,703815,713442,21200,1151596,9501955,2516001,22245,96612,139178,9833251,6904271,9605382,660260,798993,9833025,81841,1353033,24645,43978,84614,1455134,1583875,55529,236138,308260,1286924,4714451,347373,1823304,2765665,950726,1220680,9783048,38919,1054067,1209728,822678,1466225,1545622,7013900,9742725,264816,3273292,9849323,9922301,9669360,83703,290875,1315968,1431228,27257,47221,235879,335167,1380724,7372611,9519949,9542455,118151,22837,27968,747728,1371678,40333,2787725,789233,1227011,58062,322980,867345,1730224,2695495,313101,1685047,9751939,9846380,334022,1271393,1367372,171167,3522903,3356180,1234931,1511723,2771300,9514215,395751,872566,656425,1366002,96338,1151769,150837,351763,9812379,9871923,128123,3729752,5794724,1109881,9853059,148704,192308,1804529,30636,232860,33704,222331,262023,1892361,2678700,9851555,9874315,97166,181361,303042,9572832,208231,1117661,679271,9657351,44451,145929,1384638,5268862,1345410,1364584,1624209,9862154,23851,296363,1761800,709665,1217939,1228359,425009,286063,9654397,129036,698490,1192450,9557228,65710,229431,382602,17818,122171,168631,9509211,66670,378796,2574778,9693170,58077,724792,744424,1097322,1361051,1681814,1768973,80579,1898202,78096,679337,4745751,128378,260366,1340040,382368,3311104,257408,698024,1383676,2733410,3988308,322156,982478,1352056,936214,1642174,29851,144027,9830740,16035,704534,1387985,1003723,1403431,1450988,8816970,2075590,9477050,1421555,3260642,29286,46021,47211,60539,61262,273369,285519,1430720,290615,1259473,1629857,9542678,96555,163585,1402000,1412191,1951026,1360126,718345,1380248,2203607,22745,140119,172634,175672,2723714,1594973,2768446,57736,139938,1605319,1864581,3607113,15216,694812,1095375,19239,937063,1493747,3093322,654541,2948262,7234379,139542,2672961,69763,227783,2451259,59487,9504328,9627881,2614904,325579,2603202,32924,144486,126368,1164755,9560022,122184,13516,655949,1342117,2144165,760404,281271,1530481,1551967,8888066,1180005,932641,9522421,1016170,797750,792264,32119,21444,83503,7132850,1366110,57118,61892,118118,55939,3192558,279994,1342122,42380,66809,9696062,2680815,47106,42165,47525,269480,1962307,66683,44058,2584951,2690084,1110105,45117,47222,2669742,1379797,47558,48314,1165717,54755,49850,161894,67508,47567,58665,1624510,15705,2793487,6996929,46339,56552,49912,130887,48266,3366824,61312,54138,14900,45700,9504247,54605,62101,1105683,137821,42092,62950,1115159,384924,1085489,3753910,50866,9633819,737908,38608,43559,60431,55204,15590,49817,1780566,1510806,1957600,4005792,9479781,15359,1409583,39468,170876,939775,1727124,52363,1651578,978810,1398038,7451787,39808,7921611,2679338,41692,1188926,7876897,2410140,9797289,14994,1757229,9521881,674377,741203,1779206,15321,65646,801979,393890,2538648,9610267,1563766,9536348,1123571,1608632,38189,242132,216659,1563833,60633,9866431,403142,732584,947449,793853,2437279,9636598,221266,1350525,61881,70857,1304604,1136650,52661,223556,765564,659182,2156366,26897,932032,406249,2265434,3191576,40832,1033716,3063137,206444,757017,1796844,40743,366897,1368162,1423161,1555953,4810965,17636,45698,9591307,2851963,9567564,9627506,179507,696531,1396861,1045823,57994,1191090,2816234,9602146,178761,1833533,68169,308154,1367730,2502229,9603096,162834,697061,792074,1891827,9568030,9577762,9690911,9734555,3524583,48324,793078,3168389,9607078,9457479,9690857,9603411,9668675,1035240,15756,684593,9691515,377786,804749,1132710,9519937,1799314,3446406,9800234,1224625,1625409,9637450,1357876,9633917,328288,1364315,34524,186962,3306745,1899404,2425457,3216741,9680197,9607353,1258981,9606735,9607293,202971,222516,346468,896517,4391789,21911,1865233,2642799,9666537,9696957,9465649,9738693,1228357,9778381,26902,58094,203147,1160279,1304535,1986250,2643207,23838,1017643,1429268,9657386,1226028,1351882,1563396,1779842,9475108,9691068,63739,1061953,1431524,1533734,46778,130622,1224892,113561,1566216,1728340,1356642,241986,3794719,118572,1661152,1788685,2042338,77985,683557,1126247,9676788,44465,206255,208028,1078348,1855828,9479558,9690836,9963391,1223099,1635197,4246846,43700,86747,809392,1358039,9708278,136726,223201,1606724,9676437,9679856,9486254,9578399,151416,1390557,1645086,2465013,9651507,9671540,1384180,5900757,36887,264772,8889149,9506321,121800,146635,1602640,4202879,35245,1336665,9506382,9542736,178939,298490,936698,1810172,9648133,9652158,181520,1134957,9714561,9787549,9797597,310489,1475207,180533,308038,665270,1022005,1398159,325935,9486126,9602928,9752187,45651,313918,1001922,3416382,6526672,1885701,9711208,112521,1952094,1124727,1611090,1852736,9639585,9805240,31512,36431,1120444,9783977,9866248,266139,731691,16670,314026,9603383,58959,5624190,9627983,127892,281033,1492532,2295880,2433667,9474911,9654532,271013,846055,1233059,2780843,2958770,3153361,9549942,1509408,1598050,2228402,4365925,149263,8893931,9671560,55605,248337,259501,655084,9786691,147207,820862,1546345,2140193,4328719,6605722,9657217,1376812,2298441,9565286,24621,163196,2143220,1181001,1580860,9869054,165762,6761844,9605309,9656581,279106,408743,1355707,1390852,4668197,9630289,9650244,9666379,10009240,20063,126026,291613,2877697,9737123,9797097,185104,1027719,1568626,9627773,9679561,9780796,1427936,9508848,1639933,832059,1340426,1552474,2651452,241567,712251,815883,9536261,9587949,417968,1488649,1628841,9639693,9688143,1501415,1861371,2214566,9648052,9696506,30186,49236,105792,256752,805851,826484,88471,151864,161024,683329,1519859,5423873,9590870,302833,1383698,370059,1647353,2301061,345757,38939,302039,1016634,1558961,2913554,8558428,9588223,9588467,9633545,1149519,2409990,9707698,197207,9605083,69767,9559943,9582494,9640127,9783496,9824951,33494,294773,1310527,1350832,1372431,8452634,9517611,9689074,338812,1322739,1519971,2553295,9708447,2729849,9668678,201768,1387886,1537715,2152633,9564036,9862289,685094,691225,1293219,1375842,9699262,30437,49746,65596,194559,1253439,1448427,1848882,9651925,42137,262540,289363,5446751,9599105,19250,42101,1118994,1160214,1328741,2780862,15386,423969,1394661,2171600,2597578,4680037,9497574,9680228,1371217,2312505,9693218,125140,171093,983939,9960886,42584,9723114,35336,132414,1066838,1151219,2788632,4223955,9517490,9841519,46138,110271,704403,960883,9699666,258486,703916,3650581,9591162,9657453,9688904,9711577,82011,402478,659554,1958901,9710917,9801713,55766,1617958,2059422,9509144,9657009,9736635,243562,359337,690092,1378288,1911191,3311694,5747982,9671192,34176,732053,2415085,9666749,276127,1303250,1421552,2723853,730026,1558790,9599350,9633455,9647765,9825231,1320230,3043511,119693,725478,973546,9649677,9695846,379384,1280817,3990126,9542449,1307729,2922702,9680162,46888,50827,165879,308836,364662,1493229,4727253,5648160,9637449,1782758,65271,123392,399652,9639897,9708843,9894175,277646,1857185,9675784,9825774,21977,876634,9669055,182663,9610015,9691388,43742,1393380,1934535,1075991,3797177,8103749,9602866,9607463,9708418,193815,2159960,9585424,375474,697054,818015,1355367,9506579,650861,42392,9496930,9509177,69744,9631259,1394338,1950036,1988665,155790,1132955,9671034,285096,1662572,9688988,9742923,254308,1450824,9640254,9776067,9541955,9653466,45810,33060,41578,154893,968042,9603389,742199,1365227,9482283,46649,9541334,147339,1297244,1379738,1104960,1363741,9823315,176495,9874681,8570867,1261006,1394709,48326,20242,20398,20886,22075,26227,26241,30513,32334,34616,35800,39746,39886,41603,42274,42558,46614,46695,47533,57203,57907,59980,63782,64055,87282,95752,95903,105170,106575,129781,130175,130475,132037,136204,138494,140434,147344,149144,149499,150234,151676,155016,155039,178986,183658,184578,195649,227833,232119,235206,248948,252107,254387,263796,263925,278836,296809,303448,311874,341550,373667,381649,384626,394567,412748,415522,650388,655218,672163,697620,699967,703191,705508,707297,709896,728025,784172,816520,827723,837621,897436,903838,1007715,1029274,1065473,1092428,1124589,1128269,1160290,1184001,1185923,1218360,1231964,1265826,1290278,1328614,1332689,1337820,1338098,1346664,1349594,1358870,1365615,1370844,1372377,1374714,1395896,1417107,1419496,1470805,1504994,1542001,1554129,1555561,1556652,1558869,1564324,1597942,1660533,1663820,1726889,1789038,1855526,1857419,1998771,2322892,2670008,2762382,2762753,2862612,2909782,2931004,2975263,2988329,3311557,3341334,3494648,3838938,4379587,5022089,5218225,5395864,5549463,7517620,9599209,9630114,9648196,9653954,9670873,9688764,9698968
		];

		return in_array($page_id, $summaries_with_last_sentences);
	}
}

$maintClass = "ConvertSummariesToTemplate";
require_once RUN_MAINTENANCE_IF_MAIN;
