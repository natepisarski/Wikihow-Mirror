<?php
/**
 * /opt/wikihow/scripts/whrun --user=apache -- countZeroStu.php
 * this script will find pages in titus that have a large drop in day to day stu or pageview
 * and emails the results
 *
 */

require_once __DIR__ . '/../Maintenance.php';

/**
 *
 */
class CountZeroStu extends Maintenance {
	public function __construct() {
		parent::__construct();
        $this->mDescription = "find articles with stu and pv drop";
	}

	public function execute() {
		$this->getArticles();
		$this->output( "Done\n" );
	}

	// the main function of this class
	private function getArticles() {
		$dbr = wfGetDB(DB_REPLICA);

		// we have to select 1day views >= 0 because negative numbers can appear
		// after a stu reset
		$conditions = array( 
			'ti_language_code' => "en",
			'ti_stu2_1day_views_desktop >= 0',
			'ti_stu2_7day_views_desktop > 25',
			'ti_robot_policy' => 'index,follow',
			//'(cast(ti_stu2_7day_views_desktop as signed) - ti_stu2_1day_views_desktop) > 10',
			'ti_stu2_1day_views_desktop / ti_stu2_7day_views_desktop < 0.1'
		);

		$vals = array( 
			'ti_page_id',
			'ti_page_title',
			'ti_stu2_1day_views_desktop',
			'ti_stu2_7day_views_desktop',
			'ti_30day_views',
			'ti_daily_views',
		);
		$options = array();

		$rows = DatabaseHelper::batchSelect(
			array( 'titusdb2.titus_intl' ),
			$vals,
			$conditions,
			__METHOD__,
			$options,
			DatabaseHelper::DEFAULT_BATCH_SIZE,
			$dbr
		);
		decho("last", $dbr->lastQuery(), false);

		$data = array();
		$data[] = array(
			"type",
			"URL",
			"pageid",
			"title",
			"ti_stu2_1day_views_desktop",
			"ti_stu2_7day_views_desktop",
			"ti_30day_views",
			"ti_daily_views",
			"daily viewsyesterday",
			"search link",
			"GA link",
		);
		$data = array_merge( $data, $this->formatRows( $rows, "STU" ) );

		// now look for articles that have had a 95% or more traffic drop overall
		// for articles with over 3500 views a month
		$conditions = array( 
			'ti_language_code' => "en",
			'30 * ti_daily_views / ti_30day_views < 0.05',
			'ti_30day_views > 3500',
			'ti_robot_policy' => 'index,follow',
		);
		$rows = DatabaseHelper::batchSelect(
			array( 'titusdb2.titus_intl' ),
			$vals,
			$conditions,
			__METHOD__,
			$options,
			DatabaseHelper::DEFAULT_BATCH_SIZE,
			$dbr
		);
		decho("last", $dbr->lastQuery(), false);

		// only show results for which the drop was between today and yesterday
		$rows = $this->filterPVRows( $rows );

		$data = array_merge( $data, $this->formatRows( $rows, "PV" ) );
		if ( $data ) {
			$this->emailResults( $data );
		}
	}

	// removes rows for which the traffic drop was more than a day ago
	private function filterPVRows( $rows ) {
		$dbr = wfGetDB( DB_REPLICA );
		$table = "titusdb2.titus_historical_intl";
		$var = "ti_daily_views";
		$cond = array( "ti_language_code" => "en" );
		$options = array( "ORDER BY" => "ti_datestamp DESC" );
		$result = array();
		foreach ( $rows as $row ) {
			$todayViews = $row->ti_daily_views;

			$cond["ti_page_id"] = $row->ti_page_id;
			$yesterdayViews = $dbr->selectField( $table, $var, $cond, __METHOD__, $options );

			// if no views yesterday then skip this entry
			if ( $yesterdayViews == 0 ) {
				continue;
			}

			// if the views today vs yesterday dropped by more than 80%
			// then we will keep this result
			if ( $todayViews / $yesterdayViews < 0.8 ) {
				$row->yesterday_views = $yesterdayViews;
				$result[] = $row;
			}
		}
		return $result;
	}

	// group the lines of data into a string and send it as an email
	private function emailResults( $data ) {
		global $wgIsDevServer;

		// the data will always have at least one line which is the header..
		// if this is the only line, then do not send the email
		if ( count( $data ) < 2 ) {
			return;
		}
		$message = "";
		foreach ( $data as $line ) {
			$message .= implode( ",", $line ) . "\n\n";
		}

		decho( "will send message", $message, false );

		$to = new MailAddress("tituspvdrop@wikihow.com,aaron@wikihow.com");
		if ( $wgIsDevServer ) {
			$to = new MailAddress("aaron@wikihow.com");
		}

		$from = new MailAddress( "alerts@wikihow.com" );
		$subject = "Stu and Pageview alerts";
		$endPart = "\n\nGenerated by " . __FILE__ . " on " . gethostname() . "\n";
		UserMailer::send( $to, $from, $subject, $message . $endPart, null, "text/plain; charset=UTF-8" );
	}

	// formats the sql rows into an array of data and adds links to GA and google
	private function formatRows( $rows, $type ) {
		$fromDate = strtotime( '-2 months' );
		$fromDate = date( 'Ymd', $fromDate );
		$currentDate = strtotime( '-1 days' );
		$currentDate = date( 'Ymd', $currentDate );

		$result = array();
		if ( count ( $rows ) == 0 ) {
			return $result;
		}

		foreach ( $rows as $row ) {
			$searchLink = "https://www.google.com/#q=http:%2F%2Fwww.wikihow.com%2F".$row->ti_page_title;
			$GALink = "https://analytics.google.com/analytics/web/#report/content-pages/a2375655w4284067p17962469/%3F_u.date00%3D".
				$fromDate."%26_u.date01%3D".
				$currentDate."%26explorer-table.plotKeys%3D%5B%5D%26explorer-table.rowCount%3D5000%26explorer-table.filter%3D".
				$row->ti_page_title . "/";

			$data = array();
			$data[] = $type;
			$data[] = "https://www.wikihow.com/".$row->ti_page_title;
			$data[] = $row->ti_page_id;
			$data[] = $row->ti_page_title;
			$data[] = $row->ti_stu2_1day_views_desktop;
			$data[] = $row->ti_stu2_7day_views_desktop;
			$data[] = $row->ti_30day_views;
			$data[] = $row->ti_daily_views;
			$data[] = $row->yesterday_views;
			$data[] = $searchLink;
			$data[] = $GALink;
			$result[] = $data;
		}
		return $result;
	}
}

$maintClass = "CountZeroStu";
require_once RUN_MAINTENANCE_IF_MAIN;

